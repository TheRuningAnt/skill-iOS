//
//  JobsListController.m
//  skill-iOS
//
//  Created by 赵广亮 on 2016/10/24.
//  Copyright © 2016年 zhaoguangliangzhaoguanliang. All rights reserved.
//

#import "JobsListController.h"
#import "JobsListItem.h"
#import "JobDetailController.h"

@interface JobsListController ()<UICollectionViewDelegate,UICollectionViewDataSource>

/**
 *  职业列表
 */
@property (nonatomic,strong) UICollectionView *jobListCollectionView;
/**
 *  存储职业Model数组
 */
@property (nonatomic,strong) NSMutableArray *jobsArray;

@end

@implementation JobsListController

-(void)viewWillAppear:(BOOL)animated{
    
    NSDictionary *dict = @{NSForegroundColorAttributeName:color_24c9a7,
                           NSFontAttributeName:[UIFont systemFontOfSize:17.0f],
                           };
    self.navigationController.navigationBar.titleTextAttributes = dict;
    self.navigationController.navigationBar.translucent = NO;
    self.title = @"职业列表";
}

- (void)viewDidLoad {
    
    [super viewDidLoad];
    
    [self setupUI];
    [self getDataOfJobList];
}

//布局页面
-(void)setupUI{
    
    NSDictionary *dict = @{NSForegroundColorAttributeName:color_0f4068,
                           NSFontAttributeName:[UIFont systemFontOfSize:17.0f],
                           };
    self.navigationController.navigationBar.titleTextAttributes = dict;
    [self.navigationController.navigationBar setShadowImage:nil];
    
    //导航栏返回按钮
    UIButton *button = [[UIButton alloc]init];
    [button setImage:[UIImage imageNamed:@"Utils-Kit-back"] forState:UIControlStateNormal];
    button.frame = CGRectMake(0,0, 30*HEIGHT_SCALE, 30*HEIGHT_SCALE) ;
    [button setImageEdgeInsets:UIEdgeInsetsMake(0, 0, 0, 10)];
    [button addTarget:self action:@selector(back) forControlEvents:UIControlEventTouchUpInside];
    UIBarButtonItem *item1 = [[UIBarButtonItem alloc] initWithCustomView:button];
    self.navigationItem.leftBarButtonItems = @[item1];
    
    [self.view addSubview:self.jobListCollectionView];
}

#pragma mark 加载数据

-(void)getDataOfJobList{
    
    //检测网络状态
    KCheckNetWorkAndRetuen(^(){
        
        [self.jobListCollectionView.mj_header endRefreshing];
    })
    
    //每次请求网络数据前检测网络状态
    [PTTReachability PTTReachabilityWithSuccessBlock:^(NSString *status) {
        if ([status isEqualToString:@"无连接"]) {
            
            [ShowMessageTipUtil showTipLabelWithMessage:@"无网络链接,请检查网络状态"];
            [self.jobListCollectionView.mj_header endRefreshing];

        }
    }];
    
    [self.jobsArray removeAllObjects];
    [self.jobListCollectionView reloadData];
    
    [HttpService sendGetHttpRequestWithUrl:API_JobsList paraments:nil successBlock:^(NSDictionary *jsonDic) {
        
        NSArray *arrayOfOccupations = [jsonDic objectForKey:@"occupations"];
        for(NSDictionary *dic in arrayOfOccupations){
            
            JobModel *model = [JobModel new];
            [model setValuesForKeysWithDictionary:dic];
            [self.jobsArray addObject:model];
        }
        [self.jobListCollectionView.mj_header endRefreshing];
        [self.jobListCollectionView reloadData];
    }];
}

//加载更多数据  目前接口暂未提供分页查询操作  该功能暂不可用
-(void)loadMoreData{
    
   // KCheckNetWorkAndRetuen()
    
    NSLog(@"上拉加载触发 %s",__FUNCTION__);
    [self.jobListCollectionView.mj_footer endRefreshing];
    
    //每次请求网络数据前检测网络状态
    [PTTReachability PTTReachabilityWithSuccessBlock:^(NSString *status) {
        if ([status isEqualToString:@"无连接"]) {
            
            [ShowMessageTipUtil showTipLabelWithMessage:@"无网络链接,请检查网络状态"];
            [self.jobListCollectionView.mj_footer endRefreshing];
        }
    }];

}

#pragma mark 导航栏返回按钮触发方法
-(void)back{
    
    [self.navigationController popViewControllerAnimated:YES];
}

#pragma mark collectionView代理

-(NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView{
    return 1;
}

-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section{
        return self.jobsArray.count;
}

-(UICollectionViewCell*)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath{
    
    JobsListItem *item = [collectionView dequeueReusableCellWithReuseIdentifier:@"jobItem" forIndexPath:indexPath];
    item.jobModel = self.jobsArray[indexPath.row];
    return item;
}

// 两个cell之间的最小间距，是由API自动计算的，只有当间距小于该值时，cell会进行换行
- (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section
{
    return 10;
}

// 两行之间的最小间距
- (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section
{
    return 0;
}

//collectionView点击事件
-(void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath{
    
    //推出职业详情页面
    JobDetailController *jobDetailController = [[JobDetailController alloc] init];
    JobModel *model = self.jobsArray[indexPath.row];
    
    jobDetailController.jobId = model.jobId;
    [self.navigationController pushViewController:jobDetailController animated:YES];
}


#pragma mark 懒加载

-(NSMutableArray *)jobsArray{
    
    if (!_jobsArray) {
        _jobsArray = @[].mutableCopy;
    }
    return _jobsArray;
}


-(UICollectionView *)jobListCollectionView{
    
    if (!_jobListCollectionView) {
        
        UICollectionViewFlowLayout *layout = [[UICollectionViewFlowLayout alloc] init];
        layout.scrollDirection = UICollectionViewScrollDirectionVertical;
        layout.itemSize = CGSizeMake(kWindowWidth/2 - 20 , kWindowWidth/2/4*3 + 65);
        
        _jobListCollectionView = [[UICollectionView alloc] initWithFrame:CGRectMake(0, 0, kWindowWidth, self.view.frame.size.height - 20) collectionViewLayout:layout];
        _jobListCollectionView.delegate = self;
        _jobListCollectionView.dataSource = self;
        _jobListCollectionView.showsVerticalScrollIndicator = NO;
        _jobListCollectionView.backgroundColor = [UIColor whiteColor];
        [_jobListCollectionView registerClass:[JobsListItem class] forCellWithReuseIdentifier:@"jobItem"];
        
        //添加下拉刷新  上拉加载功能
        WK(weakSelf);
        _jobListCollectionView.mj_header = [MJRefreshNormalHeader   headerWithRefreshingBlock:^{
            [weakSelf getDataOfJobList];
        }];
        _jobListCollectionView.mj_footer = [MJRefreshAutoFooter footerWithRefreshingBlock:^{
           
            [weakSelf loadMoreData];
        }];
    }
    return _jobListCollectionView;
}



- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
